// Generated from stella/stella_generated/lib/src/stella_lexer.g4 by ANTLR 4.13.1
// ignore_for_file: unused_import, unused_local_variable, prefer_single_quotes
import 'package:antlr4/antlr4.dart';


class stella_lexer extends Lexer {
  static final checkVersion = () => RuntimeMetaData.checkVersion('4.13.1', RuntimeMetaData.VERSION);

  static final List<DFA> _decisionToDFA = List.generate(
        _ATN.numberOfDecisions, (i) => DFA(_ATN.getDecisionState(i), i));
  static final PredictionContextCache _sharedContextCache = PredictionContextCache();
  static const int
    TOKEN_Surrogate_id_SYMB_0 = 1, TOKEN_Surrogate_id_SYMB_1 = 2, TOKEN_Surrogate_id_SYMB_2 = 3, 
    TOKEN_Surrogate_id_SYMB_3 = 4, TOKEN_Surrogate_id_SYMB_4 = 5, TOKEN_Surrogate_id_SYMB_5 = 6, 
    TOKEN_Surrogate_id_SYMB_6 = 7, TOKEN_Surrogate_id_SYMB_7 = 8, TOKEN_Surrogate_id_SYMB_8 = 9, 
    TOKEN_Surrogate_id_SYMB_9 = 10, TOKEN_Surrogate_id_SYMB_10 = 11, TOKEN_Surrogate_id_SYMB_11 = 12, 
    TOKEN_Surrogate_id_SYMB_12 = 13, TOKEN_Surrogate_id_SYMB_13 = 14, TOKEN_Surrogate_id_SYMB_14 = 15, 
    TOKEN_Surrogate_id_SYMB_15 = 16, TOKEN_Surrogate_id_SYMB_16 = 17, TOKEN_Surrogate_id_SYMB_17 = 18, 
    TOKEN_Surrogate_id_SYMB_18 = 19, TOKEN_Surrogate_id_SYMB_19 = 20, TOKEN_Surrogate_id_SYMB_20 = 21, 
    TOKEN_Surrogate_id_SYMB_21 = 22, TOKEN_Surrogate_id_SYMB_22 = 23, TOKEN_Surrogate_id_SYMB_23 = 24, 
    TOKEN_Surrogate_id_SYMB_24 = 25, TOKEN_Surrogate_id_SYMB_25 = 26, TOKEN_Surrogate_id_SYMB_26 = 27, 
    TOKEN_Surrogate_id_SYMB_27 = 28, TOKEN_Surrogate_id_SYMB_28 = 29, TOKEN_Surrogate_id_SYMB_29 = 30, 
    TOKEN_Surrogate_id_SYMB_30 = 31, TOKEN_Surrogate_id_SYMB_31 = 32, TOKEN_Surrogate_id_SYMB_32 = 33, 
    TOKEN_Surrogate_id_SYMB_33 = 34, TOKEN_Surrogate_id_SYMB_34 = 35, TOKEN_Surrogate_id_SYMB_35 = 36, 
    TOKEN_Surrogate_id_SYMB_36 = 37, TOKEN_Surrogate_id_SYMB_37 = 38, TOKEN_Surrogate_id_SYMB_38 = 39, 
    TOKEN_Surrogate_id_SYMB_39 = 40, TOKEN_Surrogate_id_SYMB_40 = 41, TOKEN_Surrogate_id_SYMB_41 = 42, 
    TOKEN_Surrogate_id_SYMB_42 = 43, TOKEN_Surrogate_id_SYMB_43 = 44, TOKEN_Surrogate_id_SYMB_44 = 45, 
    TOKEN_Surrogate_id_SYMB_45 = 46, TOKEN_Surrogate_id_SYMB_46 = 47, TOKEN_Surrogate_id_SYMB_47 = 48, 
    TOKEN_Surrogate_id_SYMB_48 = 49, TOKEN_Surrogate_id_SYMB_49 = 50, TOKEN_Surrogate_id_SYMB_50 = 51, 
    TOKEN_Surrogate_id_SYMB_51 = 52, TOKEN_Surrogate_id_SYMB_52 = 53, TOKEN_Surrogate_id_SYMB_53 = 54, 
    TOKEN_Surrogate_id_SYMB_54 = 55, TOKEN_Surrogate_id_SYMB_55 = 56, TOKEN_Surrogate_id_SYMB_56 = 57, 
    TOKEN_Surrogate_id_SYMB_57 = 58, TOKEN_Surrogate_id_SYMB_58 = 59, TOKEN_Surrogate_id_SYMB_59 = 60, 
    TOKEN_Surrogate_id_SYMB_60 = 61, TOKEN_Surrogate_id_SYMB_61 = 62, TOKEN_Surrogate_id_SYMB_62 = 63, 
    TOKEN_Surrogate_id_SYMB_63 = 64, TOKEN_Surrogate_id_SYMB_64 = 65, TOKEN_Surrogate_id_SYMB_65 = 66, 
    TOKEN_Surrogate_id_SYMB_66 = 67, TOKEN_Surrogate_id_SYMB_67 = 68, TOKEN_Surrogate_id_SYMB_68 = 69, 
    TOKEN_Surrogate_id_SYMB_69 = 70, TOKEN_Surrogate_id_SYMB_70 = 71, TOKEN_Surrogate_id_SYMB_71 = 72, 
    TOKEN_Surrogate_id_SYMB_72 = 73, TOKEN_Surrogate_id_SYMB_73 = 74, TOKEN_Surrogate_id_SYMB_74 = 75, 
    TOKEN_Surrogate_id_SYMB_75 = 76, TOKEN_Surrogate_id_SYMB_76 = 77, TOKEN_Surrogate_id_SYMB_77 = 78, 
    TOKEN_Surrogate_id_SYMB_78 = 79, TOKEN_Surrogate_id_SYMB_79 = 80, TOKEN_COMMENT_antlr_builtin = 81, 
    TOKEN_MULTICOMMENT_antlr_builtin = 82, TOKEN_StellaIdent = 83, TOKEN_ExtensionName = 84, 
    TOKEN_MemoryAddress = 85, TOKEN_DOUBLE = 86, TOKEN_INTEGER = 87, TOKEN_WS = 88, 
    TOKEN_ErrorToken = 89;
  @override
  final List<String> channelNames = [
    'DEFAULT_TOKEN_CHANNEL', 'HIDDEN'
  ];

  @override
  final List<String> modeNames = [
    'DEFAULT_MODE'
  ];

  @override
  final List<String> ruleNames = [
    'LETTER', 'CAPITAL', 'SMALL', 'DIGIT', 'Surrogate_id_SYMB_0', 'Surrogate_id_SYMB_1', 
    'Surrogate_id_SYMB_2', 'Surrogate_id_SYMB_3', 'Surrogate_id_SYMB_4', 
    'Surrogate_id_SYMB_5', 'Surrogate_id_SYMB_6', 'Surrogate_id_SYMB_7', 
    'Surrogate_id_SYMB_8', 'Surrogate_id_SYMB_9', 'Surrogate_id_SYMB_10', 
    'Surrogate_id_SYMB_11', 'Surrogate_id_SYMB_12', 'Surrogate_id_SYMB_13', 
    'Surrogate_id_SYMB_14', 'Surrogate_id_SYMB_15', 'Surrogate_id_SYMB_16', 
    'Surrogate_id_SYMB_17', 'Surrogate_id_SYMB_18', 'Surrogate_id_SYMB_19', 
    'Surrogate_id_SYMB_20', 'Surrogate_id_SYMB_21', 'Surrogate_id_SYMB_22', 
    'Surrogate_id_SYMB_23', 'Surrogate_id_SYMB_24', 'Surrogate_id_SYMB_25', 
    'Surrogate_id_SYMB_26', 'Surrogate_id_SYMB_27', 'Surrogate_id_SYMB_28', 
    'Surrogate_id_SYMB_29', 'Surrogate_id_SYMB_30', 'Surrogate_id_SYMB_31', 
    'Surrogate_id_SYMB_32', 'Surrogate_id_SYMB_33', 'Surrogate_id_SYMB_34', 
    'Surrogate_id_SYMB_35', 'Surrogate_id_SYMB_36', 'Surrogate_id_SYMB_37', 
    'Surrogate_id_SYMB_38', 'Surrogate_id_SYMB_39', 'Surrogate_id_SYMB_40', 
    'Surrogate_id_SYMB_41', 'Surrogate_id_SYMB_42', 'Surrogate_id_SYMB_43', 
    'Surrogate_id_SYMB_44', 'Surrogate_id_SYMB_45', 'Surrogate_id_SYMB_46', 
    'Surrogate_id_SYMB_47', 'Surrogate_id_SYMB_48', 'Surrogate_id_SYMB_49', 
    'Surrogate_id_SYMB_50', 'Surrogate_id_SYMB_51', 'Surrogate_id_SYMB_52', 
    'Surrogate_id_SYMB_53', 'Surrogate_id_SYMB_54', 'Surrogate_id_SYMB_55', 
    'Surrogate_id_SYMB_56', 'Surrogate_id_SYMB_57', 'Surrogate_id_SYMB_58', 
    'Surrogate_id_SYMB_59', 'Surrogate_id_SYMB_60', 'Surrogate_id_SYMB_61', 
    'Surrogate_id_SYMB_62', 'Surrogate_id_SYMB_63', 'Surrogate_id_SYMB_64', 
    'Surrogate_id_SYMB_65', 'Surrogate_id_SYMB_66', 'Surrogate_id_SYMB_67', 
    'Surrogate_id_SYMB_68', 'Surrogate_id_SYMB_69', 'Surrogate_id_SYMB_70', 
    'Surrogate_id_SYMB_71', 'Surrogate_id_SYMB_72', 'Surrogate_id_SYMB_73', 
    'Surrogate_id_SYMB_74', 'Surrogate_id_SYMB_75', 'Surrogate_id_SYMB_76', 
    'Surrogate_id_SYMB_77', 'Surrogate_id_SYMB_78', 'Surrogate_id_SYMB_79', 
    'COMMENT_antlr_builtin', 'MULTICOMMENT_antlr_builtin', 'StellaIdent', 
    'ExtensionName', 'MemoryAddress', 'DOUBLE', 'INTEGER', 'WS', 'Escapable', 
    'ErrorToken'
  ];

  static final List<String?> _LITERAL_NAMES = [
      null, "','", "';'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'='", 
      "':'", "'->'", "'=>'", "'|'", "'<|'", "'|>'", "':='", "'<'", "'<='", 
      "'>'", "'>='", "'=='", "'!='", "'+'", "'-'", "'*'", "'/'", "'.'", 
      "'List::head'", "'List::isempty'", "'List::tail'", "'panic!'", "'Nat::pred'", 
      "'Nat::iszero'", "'Nat::rec'", "'&'", "'Bool'", "'Bot'", "'Nat'", 
      "'Top'", "'Unit'", "'and'", "'as'", "'cast'", "'catch'", "'cons'", 
      "'core'", "'else'", "'exception'", "'extend'", "'false'", "'fix'", 
      "'fn'", "'fold'", "'forall'", "'generic'", "'if'", "'in'", "'inl'", 
      "'inline'", "'inr'", "'language'", "'let'", "'letrec'", "'match'", 
      "'new'", "'not'", "'or'", "'return'", "'succ'", "'then'", "'throw'", 
      "'throws'", "'true'", "'try'", "'type'", "'unfold'", "'unit'", "'variant'", 
      "'with'", "'\\u00B5'"
  ];
  static final List<String?> _SYMBOLIC_NAMES = [
      null, "Surrogate_id_SYMB_0", "Surrogate_id_SYMB_1", "Surrogate_id_SYMB_2", 
      "Surrogate_id_SYMB_3", "Surrogate_id_SYMB_4", "Surrogate_id_SYMB_5", 
      "Surrogate_id_SYMB_6", "Surrogate_id_SYMB_7", "Surrogate_id_SYMB_8", 
      "Surrogate_id_SYMB_9", "Surrogate_id_SYMB_10", "Surrogate_id_SYMB_11", 
      "Surrogate_id_SYMB_12", "Surrogate_id_SYMB_13", "Surrogate_id_SYMB_14", 
      "Surrogate_id_SYMB_15", "Surrogate_id_SYMB_16", "Surrogate_id_SYMB_17", 
      "Surrogate_id_SYMB_18", "Surrogate_id_SYMB_19", "Surrogate_id_SYMB_20", 
      "Surrogate_id_SYMB_21", "Surrogate_id_SYMB_22", "Surrogate_id_SYMB_23", 
      "Surrogate_id_SYMB_24", "Surrogate_id_SYMB_25", "Surrogate_id_SYMB_26", 
      "Surrogate_id_SYMB_27", "Surrogate_id_SYMB_28", "Surrogate_id_SYMB_29", 
      "Surrogate_id_SYMB_30", "Surrogate_id_SYMB_31", "Surrogate_id_SYMB_32", 
      "Surrogate_id_SYMB_33", "Surrogate_id_SYMB_34", "Surrogate_id_SYMB_35", 
      "Surrogate_id_SYMB_36", "Surrogate_id_SYMB_37", "Surrogate_id_SYMB_38", 
      "Surrogate_id_SYMB_39", "Surrogate_id_SYMB_40", "Surrogate_id_SYMB_41", 
      "Surrogate_id_SYMB_42", "Surrogate_id_SYMB_43", "Surrogate_id_SYMB_44", 
      "Surrogate_id_SYMB_45", "Surrogate_id_SYMB_46", "Surrogate_id_SYMB_47", 
      "Surrogate_id_SYMB_48", "Surrogate_id_SYMB_49", "Surrogate_id_SYMB_50", 
      "Surrogate_id_SYMB_51", "Surrogate_id_SYMB_52", "Surrogate_id_SYMB_53", 
      "Surrogate_id_SYMB_54", "Surrogate_id_SYMB_55", "Surrogate_id_SYMB_56", 
      "Surrogate_id_SYMB_57", "Surrogate_id_SYMB_58", "Surrogate_id_SYMB_59", 
      "Surrogate_id_SYMB_60", "Surrogate_id_SYMB_61", "Surrogate_id_SYMB_62", 
      "Surrogate_id_SYMB_63", "Surrogate_id_SYMB_64", "Surrogate_id_SYMB_65", 
      "Surrogate_id_SYMB_66", "Surrogate_id_SYMB_67", "Surrogate_id_SYMB_68", 
      "Surrogate_id_SYMB_69", "Surrogate_id_SYMB_70", "Surrogate_id_SYMB_71", 
      "Surrogate_id_SYMB_72", "Surrogate_id_SYMB_73", "Surrogate_id_SYMB_74", 
      "Surrogate_id_SYMB_75", "Surrogate_id_SYMB_76", "Surrogate_id_SYMB_77", 
      "Surrogate_id_SYMB_78", "Surrogate_id_SYMB_79", "COMMENT_antlr_builtin", 
      "MULTICOMMENT_antlr_builtin", "StellaIdent", "ExtensionName", "MemoryAddress", 
      "DOUBLE", "INTEGER", "WS", "ErrorToken"
  ];
  static final Vocabulary VOCABULARY = VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

  @override
  Vocabulary get vocabulary {
    return VOCABULARY;
  }


  stella_lexer(CharStream input) : super(input) {
    interpreter = LexerATNSimulator(_ATN, _decisionToDFA, _sharedContextCache, recog: this);
  }

  @override
  List<int> get serializedATN => _serializedATN;

  @override
  String get grammarFileName => 'stella_lexer.g4';

  @override
  ATN getATN() { return _ATN; }

  static const List<int> _serializedATN = [
      4,0,89,677,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
      6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,
      13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,
      7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
      27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,
      2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,
      40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,
      7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,
      54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,
      2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,
      67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,
      7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,
      81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,
      2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,1,0,1,
      0,3,0,192,8,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
      1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
      14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,
      1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,24,1,
      24,1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,
      1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,
      32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,
      1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,
      34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
      1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,
      37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,39,
      1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,
      43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,
      1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,
      48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,
      1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,
      52,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
      1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,
      58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,61,
      1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,
      63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,
      1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,
      68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,71,
      1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,
      73,1,74,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,75,1,75,
      1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,
      78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,80,1,80,1,80,1,80,1,80,1,81,
      1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,1,82,1,82,1,83,1,
      83,1,84,1,84,1,84,1,84,5,84,577,8,84,10,84,12,84,580,9,84,1,84,3,84,
      583,8,84,1,84,1,84,3,84,587,8,84,1,84,1,84,1,85,1,85,1,85,1,85,5,85,
      595,8,85,10,85,12,85,598,9,85,1,85,1,85,1,85,1,85,1,85,1,86,1,86,3,
      86,607,8,86,1,86,1,86,1,86,3,86,612,8,86,5,86,614,8,86,10,86,12,86,
      617,9,86,1,87,1,87,1,87,1,87,3,87,623,8,87,4,87,625,8,87,11,87,12,
      87,626,1,88,1,88,1,88,1,88,1,88,4,88,634,8,88,11,88,12,88,635,1,88,
      1,88,1,89,4,89,641,8,89,11,89,12,89,642,1,89,1,89,4,89,647,8,89,11,
      89,12,89,648,1,89,1,89,3,89,653,8,89,1,89,4,89,656,8,89,11,89,12,89,
      657,3,89,660,8,89,1,90,4,90,663,8,90,11,90,12,90,664,1,91,4,91,668,
      8,91,11,91,12,91,669,1,91,1,91,1,92,1,92,1,93,1,93,1,596,0,94,1,0,
      3,0,5,0,7,0,9,1,11,2,13,3,15,4,17,5,19,6,21,7,23,8,25,9,27,10,29,11,
      31,12,33,13,35,14,37,15,39,16,41,17,43,18,45,19,47,20,49,21,51,22,
      53,23,55,24,57,25,59,26,61,27,63,28,65,29,67,30,69,31,71,32,73,33,
      75,34,77,35,79,36,81,37,83,38,85,39,87,40,89,41,91,42,93,43,95,44,
      97,45,99,46,101,47,103,48,105,49,107,50,109,51,111,52,113,53,115,54,
      117,55,119,56,121,57,123,58,125,59,127,60,129,61,131,62,133,63,135,
      64,137,65,139,66,141,67,143,68,145,69,147,70,149,71,151,72,153,73,
      155,74,157,75,159,76,161,77,163,78,165,79,167,80,169,81,171,82,173,
      83,175,84,177,85,179,86,181,87,183,88,185,0,187,89,1,0,9,3,0,65,90,
      192,214,216,222,3,0,97,122,223,246,248,255,1,0,48,57,2,0,10,10,13,
      13,5,0,33,33,45,45,58,58,63,63,95,95,2,0,45,45,95,95,2,0,65,70,97,
      102,3,0,9,10,12,13,32,32,6,0,34,34,92,92,102,102,110,110,114,114,116,
      116,692,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
      0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
      0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
      0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,
      0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
      59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
      1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,
      0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,
      0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
      0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,
      0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,
      1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,
      129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,
      0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,
      0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,
      1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,
      167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,
      0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,187,1,
      0,0,0,1,191,1,0,0,0,3,193,1,0,0,0,5,195,1,0,0,0,7,197,1,0,0,0,9,199,
      1,0,0,0,11,201,1,0,0,0,13,203,1,0,0,0,15,205,1,0,0,0,17,207,1,0,0,
      0,19,209,1,0,0,0,21,211,1,0,0,0,23,213,1,0,0,0,25,215,1,0,0,0,27,217,
      1,0,0,0,29,219,1,0,0,0,31,222,1,0,0,0,33,225,1,0,0,0,35,227,1,0,0,
      0,37,230,1,0,0,0,39,233,1,0,0,0,41,236,1,0,0,0,43,238,1,0,0,0,45,241,
      1,0,0,0,47,243,1,0,0,0,49,246,1,0,0,0,51,249,1,0,0,0,53,252,1,0,0,
      0,55,254,1,0,0,0,57,256,1,0,0,0,59,258,1,0,0,0,61,260,1,0,0,0,63,262,
      1,0,0,0,65,273,1,0,0,0,67,287,1,0,0,0,69,298,1,0,0,0,71,305,1,0,0,
      0,73,315,1,0,0,0,75,327,1,0,0,0,77,336,1,0,0,0,79,338,1,0,0,0,81,343,
      1,0,0,0,83,347,1,0,0,0,85,351,1,0,0,0,87,355,1,0,0,0,89,360,1,0,0,
      0,91,364,1,0,0,0,93,367,1,0,0,0,95,372,1,0,0,0,97,378,1,0,0,0,99,383,
      1,0,0,0,101,388,1,0,0,0,103,393,1,0,0,0,105,403,1,0,0,0,107,410,1,
      0,0,0,109,416,1,0,0,0,111,420,1,0,0,0,113,423,1,0,0,0,115,428,1,0,
      0,0,117,435,1,0,0,0,119,443,1,0,0,0,121,446,1,0,0,0,123,449,1,0,0,
      0,125,453,1,0,0,0,127,460,1,0,0,0,129,464,1,0,0,0,131,473,1,0,0,0,
      133,477,1,0,0,0,135,484,1,0,0,0,137,490,1,0,0,0,139,494,1,0,0,0,141,
      498,1,0,0,0,143,501,1,0,0,0,145,508,1,0,0,0,147,513,1,0,0,0,149,518,
      1,0,0,0,151,524,1,0,0,0,153,531,1,0,0,0,155,536,1,0,0,0,157,540,1,
      0,0,0,159,545,1,0,0,0,161,552,1,0,0,0,163,557,1,0,0,0,165,565,1,0,
      0,0,167,570,1,0,0,0,169,572,1,0,0,0,171,590,1,0,0,0,173,606,1,0,0,
      0,175,618,1,0,0,0,177,628,1,0,0,0,179,640,1,0,0,0,181,662,1,0,0,0,
      183,667,1,0,0,0,185,673,1,0,0,0,187,675,1,0,0,0,189,192,3,3,1,0,190,
      192,3,5,2,0,191,189,1,0,0,0,191,190,1,0,0,0,192,2,1,0,0,0,193,194,
      7,0,0,0,194,4,1,0,0,0,195,196,7,1,0,0,196,6,1,0,0,0,197,198,7,2,0,
      0,198,8,1,0,0,0,199,200,5,44,0,0,200,10,1,0,0,0,201,202,5,59,0,0,202,
      12,1,0,0,0,203,204,5,40,0,0,204,14,1,0,0,0,205,206,5,41,0,0,206,16,
      1,0,0,0,207,208,5,123,0,0,208,18,1,0,0,0,209,210,5,125,0,0,210,20,
      1,0,0,0,211,212,5,91,0,0,212,22,1,0,0,0,213,214,5,93,0,0,214,24,1,
      0,0,0,215,216,5,61,0,0,216,26,1,0,0,0,217,218,5,58,0,0,218,28,1,0,
      0,0,219,220,5,45,0,0,220,221,5,62,0,0,221,30,1,0,0,0,222,223,5,61,
      0,0,223,224,5,62,0,0,224,32,1,0,0,0,225,226,5,124,0,0,226,34,1,0,0,
      0,227,228,5,60,0,0,228,229,5,124,0,0,229,36,1,0,0,0,230,231,5,124,
      0,0,231,232,5,62,0,0,232,38,1,0,0,0,233,234,5,58,0,0,234,235,5,61,
      0,0,235,40,1,0,0,0,236,237,5,60,0,0,237,42,1,0,0,0,238,239,5,60,0,
      0,239,240,5,61,0,0,240,44,1,0,0,0,241,242,5,62,0,0,242,46,1,0,0,0,
      243,244,5,62,0,0,244,245,5,61,0,0,245,48,1,0,0,0,246,247,5,61,0,0,
      247,248,5,61,0,0,248,50,1,0,0,0,249,250,5,33,0,0,250,251,5,61,0,0,
      251,52,1,0,0,0,252,253,5,43,0,0,253,54,1,0,0,0,254,255,5,45,0,0,255,
      56,1,0,0,0,256,257,5,42,0,0,257,58,1,0,0,0,258,259,5,47,0,0,259,60,
      1,0,0,0,260,261,5,46,0,0,261,62,1,0,0,0,262,263,5,76,0,0,263,264,5,
      105,0,0,264,265,5,115,0,0,265,266,5,116,0,0,266,267,5,58,0,0,267,268,
      5,58,0,0,268,269,5,104,0,0,269,270,5,101,0,0,270,271,5,97,0,0,271,
      272,5,100,0,0,272,64,1,0,0,0,273,274,5,76,0,0,274,275,5,105,0,0,275,
      276,5,115,0,0,276,277,5,116,0,0,277,278,5,58,0,0,278,279,5,58,0,0,
      279,280,5,105,0,0,280,281,5,115,0,0,281,282,5,101,0,0,282,283,5,109,
      0,0,283,284,5,112,0,0,284,285,5,116,0,0,285,286,5,121,0,0,286,66,1,
      0,0,0,287,288,5,76,0,0,288,289,5,105,0,0,289,290,5,115,0,0,290,291,
      5,116,0,0,291,292,5,58,0,0,292,293,5,58,0,0,293,294,5,116,0,0,294,
      295,5,97,0,0,295,296,5,105,0,0,296,297,5,108,0,0,297,68,1,0,0,0,298,
      299,5,112,0,0,299,300,5,97,0,0,300,301,5,110,0,0,301,302,5,105,0,0,
      302,303,5,99,0,0,303,304,5,33,0,0,304,70,1,0,0,0,305,306,5,78,0,0,
      306,307,5,97,0,0,307,308,5,116,0,0,308,309,5,58,0,0,309,310,5,58,0,
      0,310,311,5,112,0,0,311,312,5,114,0,0,312,313,5,101,0,0,313,314,5,
      100,0,0,314,72,1,0,0,0,315,316,5,78,0,0,316,317,5,97,0,0,317,318,5,
      116,0,0,318,319,5,58,0,0,319,320,5,58,0,0,320,321,5,105,0,0,321,322,
      5,115,0,0,322,323,5,122,0,0,323,324,5,101,0,0,324,325,5,114,0,0,325,
      326,5,111,0,0,326,74,1,0,0,0,327,328,5,78,0,0,328,329,5,97,0,0,329,
      330,5,116,0,0,330,331,5,58,0,0,331,332,5,58,0,0,332,333,5,114,0,0,
      333,334,5,101,0,0,334,335,5,99,0,0,335,76,1,0,0,0,336,337,5,38,0,0,
      337,78,1,0,0,0,338,339,5,66,0,0,339,340,5,111,0,0,340,341,5,111,0,
      0,341,342,5,108,0,0,342,80,1,0,0,0,343,344,5,66,0,0,344,345,5,111,
      0,0,345,346,5,116,0,0,346,82,1,0,0,0,347,348,5,78,0,0,348,349,5,97,
      0,0,349,350,5,116,0,0,350,84,1,0,0,0,351,352,5,84,0,0,352,353,5,111,
      0,0,353,354,5,112,0,0,354,86,1,0,0,0,355,356,5,85,0,0,356,357,5,110,
      0,0,357,358,5,105,0,0,358,359,5,116,0,0,359,88,1,0,0,0,360,361,5,97,
      0,0,361,362,5,110,0,0,362,363,5,100,0,0,363,90,1,0,0,0,364,365,5,97,
      0,0,365,366,5,115,0,0,366,92,1,0,0,0,367,368,5,99,0,0,368,369,5,97,
      0,0,369,370,5,115,0,0,370,371,5,116,0,0,371,94,1,0,0,0,372,373,5,99,
      0,0,373,374,5,97,0,0,374,375,5,116,0,0,375,376,5,99,0,0,376,377,5,
      104,0,0,377,96,1,0,0,0,378,379,5,99,0,0,379,380,5,111,0,0,380,381,
      5,110,0,0,381,382,5,115,0,0,382,98,1,0,0,0,383,384,5,99,0,0,384,385,
      5,111,0,0,385,386,5,114,0,0,386,387,5,101,0,0,387,100,1,0,0,0,388,
      389,5,101,0,0,389,390,5,108,0,0,390,391,5,115,0,0,391,392,5,101,0,
      0,392,102,1,0,0,0,393,394,5,101,0,0,394,395,5,120,0,0,395,396,5,99,
      0,0,396,397,5,101,0,0,397,398,5,112,0,0,398,399,5,116,0,0,399,400,
      5,105,0,0,400,401,5,111,0,0,401,402,5,110,0,0,402,104,1,0,0,0,403,
      404,5,101,0,0,404,405,5,120,0,0,405,406,5,116,0,0,406,407,5,101,0,
      0,407,408,5,110,0,0,408,409,5,100,0,0,409,106,1,0,0,0,410,411,5,102,
      0,0,411,412,5,97,0,0,412,413,5,108,0,0,413,414,5,115,0,0,414,415,5,
      101,0,0,415,108,1,0,0,0,416,417,5,102,0,0,417,418,5,105,0,0,418,419,
      5,120,0,0,419,110,1,0,0,0,420,421,5,102,0,0,421,422,5,110,0,0,422,
      112,1,0,0,0,423,424,5,102,0,0,424,425,5,111,0,0,425,426,5,108,0,0,
      426,427,5,100,0,0,427,114,1,0,0,0,428,429,5,102,0,0,429,430,5,111,
      0,0,430,431,5,114,0,0,431,432,5,97,0,0,432,433,5,108,0,0,433,434,5,
      108,0,0,434,116,1,0,0,0,435,436,5,103,0,0,436,437,5,101,0,0,437,438,
      5,110,0,0,438,439,5,101,0,0,439,440,5,114,0,0,440,441,5,105,0,0,441,
      442,5,99,0,0,442,118,1,0,0,0,443,444,5,105,0,0,444,445,5,102,0,0,445,
      120,1,0,0,0,446,447,5,105,0,0,447,448,5,110,0,0,448,122,1,0,0,0,449,
      450,5,105,0,0,450,451,5,110,0,0,451,452,5,108,0,0,452,124,1,0,0,0,
      453,454,5,105,0,0,454,455,5,110,0,0,455,456,5,108,0,0,456,457,5,105,
      0,0,457,458,5,110,0,0,458,459,5,101,0,0,459,126,1,0,0,0,460,461,5,
      105,0,0,461,462,5,110,0,0,462,463,5,114,0,0,463,128,1,0,0,0,464,465,
      5,108,0,0,465,466,5,97,0,0,466,467,5,110,0,0,467,468,5,103,0,0,468,
      469,5,117,0,0,469,470,5,97,0,0,470,471,5,103,0,0,471,472,5,101,0,0,
      472,130,1,0,0,0,473,474,5,108,0,0,474,475,5,101,0,0,475,476,5,116,
      0,0,476,132,1,0,0,0,477,478,5,108,0,0,478,479,5,101,0,0,479,480,5,
      116,0,0,480,481,5,114,0,0,481,482,5,101,0,0,482,483,5,99,0,0,483,134,
      1,0,0,0,484,485,5,109,0,0,485,486,5,97,0,0,486,487,5,116,0,0,487,488,
      5,99,0,0,488,489,5,104,0,0,489,136,1,0,0,0,490,491,5,110,0,0,491,492,
      5,101,0,0,492,493,5,119,0,0,493,138,1,0,0,0,494,495,5,110,0,0,495,
      496,5,111,0,0,496,497,5,116,0,0,497,140,1,0,0,0,498,499,5,111,0,0,
      499,500,5,114,0,0,500,142,1,0,0,0,501,502,5,114,0,0,502,503,5,101,
      0,0,503,504,5,116,0,0,504,505,5,117,0,0,505,506,5,114,0,0,506,507,
      5,110,0,0,507,144,1,0,0,0,508,509,5,115,0,0,509,510,5,117,0,0,510,
      511,5,99,0,0,511,512,5,99,0,0,512,146,1,0,0,0,513,514,5,116,0,0,514,
      515,5,104,0,0,515,516,5,101,0,0,516,517,5,110,0,0,517,148,1,0,0,0,
      518,519,5,116,0,0,519,520,5,104,0,0,520,521,5,114,0,0,521,522,5,111,
      0,0,522,523,5,119,0,0,523,150,1,0,0,0,524,525,5,116,0,0,525,526,5,
      104,0,0,526,527,5,114,0,0,527,528,5,111,0,0,528,529,5,119,0,0,529,
      530,5,115,0,0,530,152,1,0,0,0,531,532,5,116,0,0,532,533,5,114,0,0,
      533,534,5,117,0,0,534,535,5,101,0,0,535,154,1,0,0,0,536,537,5,116,
      0,0,537,538,5,114,0,0,538,539,5,121,0,0,539,156,1,0,0,0,540,541,5,
      116,0,0,541,542,5,121,0,0,542,543,5,112,0,0,543,544,5,101,0,0,544,
      158,1,0,0,0,545,546,5,117,0,0,546,547,5,110,0,0,547,548,5,102,0,0,
      548,549,5,111,0,0,549,550,5,108,0,0,550,551,5,100,0,0,551,160,1,0,
      0,0,552,553,5,117,0,0,553,554,5,110,0,0,554,555,5,105,0,0,555,556,
      5,116,0,0,556,162,1,0,0,0,557,558,5,118,0,0,558,559,5,97,0,0,559,560,
      5,114,0,0,560,561,5,105,0,0,561,562,5,97,0,0,562,563,5,110,0,0,563,
      564,5,116,0,0,564,164,1,0,0,0,565,566,5,119,0,0,566,567,5,105,0,0,
      567,568,5,116,0,0,568,569,5,104,0,0,569,166,1,0,0,0,570,571,5,181,
      0,0,571,168,1,0,0,0,572,573,5,47,0,0,573,574,5,47,0,0,574,578,1,0,
      0,0,575,577,8,3,0,0,576,575,1,0,0,0,577,580,1,0,0,0,578,576,1,0,0,
      0,578,579,1,0,0,0,579,586,1,0,0,0,580,578,1,0,0,0,581,583,5,13,0,0,
      582,581,1,0,0,0,582,583,1,0,0,0,583,584,1,0,0,0,584,587,5,10,0,0,585,
      587,5,0,0,1,586,582,1,0,0,0,586,585,1,0,0,0,587,588,1,0,0,0,588,589,
      6,84,0,0,589,170,1,0,0,0,590,591,5,47,0,0,591,592,5,42,0,0,592,596,
      1,0,0,0,593,595,9,0,0,0,594,593,1,0,0,0,595,598,1,0,0,0,596,597,1,
      0,0,0,596,594,1,0,0,0,597,599,1,0,0,0,598,596,1,0,0,0,599,600,5,42,
      0,0,600,601,5,47,0,0,601,602,1,0,0,0,602,603,6,85,0,0,603,172,1,0,
      0,0,604,607,5,95,0,0,605,607,3,1,0,0,606,604,1,0,0,0,606,605,1,0,0,
      0,607,615,1,0,0,0,608,614,7,4,0,0,609,612,3,7,3,0,610,612,3,1,0,0,
      611,609,1,0,0,0,611,610,1,0,0,0,612,614,1,0,0,0,613,608,1,0,0,0,613,
      611,1,0,0,0,614,617,1,0,0,0,615,613,1,0,0,0,615,616,1,0,0,0,616,174,
      1,0,0,0,617,615,1,0,0,0,618,624,5,35,0,0,619,625,7,5,0,0,620,623,3,
      7,3,0,621,623,3,1,0,0,622,620,1,0,0,0,622,621,1,0,0,0,623,625,1,0,
      0,0,624,619,1,0,0,0,624,622,1,0,0,0,625,626,1,0,0,0,626,624,1,0,0,
      0,626,627,1,0,0,0,627,176,1,0,0,0,628,629,5,60,0,0,629,630,5,48,0,
      0,630,633,5,120,0,0,631,634,7,6,0,0,632,634,3,7,3,0,633,631,1,0,0,
      0,633,632,1,0,0,0,634,635,1,0,0,0,635,633,1,0,0,0,635,636,1,0,0,0,
      636,637,1,0,0,0,637,638,5,62,0,0,638,178,1,0,0,0,639,641,3,7,3,0,640,
      639,1,0,0,0,641,642,1,0,0,0,642,640,1,0,0,0,642,643,1,0,0,0,643,644,
      1,0,0,0,644,646,5,46,0,0,645,647,3,7,3,0,646,645,1,0,0,0,647,648,1,
      0,0,0,648,646,1,0,0,0,648,649,1,0,0,0,649,659,1,0,0,0,650,652,5,101,
      0,0,651,653,5,45,0,0,652,651,1,0,0,0,652,653,1,0,0,0,653,655,1,0,0,
      0,654,656,3,7,3,0,655,654,1,0,0,0,656,657,1,0,0,0,657,655,1,0,0,0,
      657,658,1,0,0,0,658,660,1,0,0,0,659,650,1,0,0,0,659,660,1,0,0,0,660,
      180,1,0,0,0,661,663,3,7,3,0,662,661,1,0,0,0,663,664,1,0,0,0,664,662,
      1,0,0,0,664,665,1,0,0,0,665,182,1,0,0,0,666,668,7,7,0,0,667,666,1,
      0,0,0,668,669,1,0,0,0,669,667,1,0,0,0,669,670,1,0,0,0,670,671,1,0,
      0,0,671,672,6,91,0,0,672,184,1,0,0,0,673,674,7,8,0,0,674,186,1,0,0,
      0,675,676,9,0,0,0,676,188,1,0,0,0,22,0,191,578,582,586,596,606,611,
      613,615,622,624,626,633,635,642,648,652,657,659,664,669,1,6,0,0
  ];

  static final ATN _ATN =
      ATNDeserializer().deserialize(_serializedATN);
}